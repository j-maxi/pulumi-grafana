// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The folder resource allows a folder to be created on a Grafana server.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-grafana/blob/master/website/docs/r/folder.html.markdown.
type Folder struct {
	s *pulumi.ResourceState
}

// NewFolder registers a new resource with the given unique name, arguments, and options.
func NewFolder(ctx *pulumi.Context,
	name string, args *FolderArgs, opts ...pulumi.ResourceOpt) (*Folder, error) {
	if args == nil || args.Title == nil {
		return nil, errors.New("missing required argument 'Title'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["title"] = nil
	} else {
		inputs["title"] = args.Title
	}
	inputs["uid"] = nil
	s, err := ctx.RegisterResource("grafana:index/folder:Folder", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Folder{s: s}, nil
}

// GetFolder gets an existing Folder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolder(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FolderState, opts ...pulumi.ResourceOpt) (*Folder, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["title"] = state.Title
		inputs["uid"] = state.Uid
	}
	s, err := ctx.ReadResource("grafana:index/folder:Folder", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Folder{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Folder) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Folder) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The title of the folder.
func (r *Folder) Title() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["title"])
}

// An external id of the folder in Grafana (stable when folders are migrated
// between Grafana instances). The `uid` is required by several Grafana Folder APIs.
func (r *Folder) Uid() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["uid"])
}

// Input properties used for looking up and filtering Folder resources.
type FolderState struct {
	// The title of the folder.
	Title interface{}
	// An external id of the folder in Grafana (stable when folders are migrated
	// between Grafana instances). The `uid` is required by several Grafana Folder APIs.
	Uid interface{}
}

// The set of arguments for constructing a Folder resource.
type FolderArgs struct {
	// The title of the folder.
	Title interface{}
}
